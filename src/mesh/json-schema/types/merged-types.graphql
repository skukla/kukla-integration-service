# Merged GraphQL Type Definitions for JSON Schema Multi-Source Architecture
# Generated for type merging between Products, Categories, and Inventory sources

# Base Types from Individual Sources
type Product {
  sku: String!
  name: String
  price: Float
  status: Int
  type_id: String
  attribute_set_id: Int
  created_at: String
  updated_at: String
  weight: Float
  custom_attributes: [CustomAttribute]
  media_gallery_entries: [MediaGalleryEntry]
}

type Category {
  id: Int!
  name: String!
  parent_id: Int
  is_active: Boolean
  position: Int
  children: [Category]
  product_count: Int
}

type InventoryItem {
  item_id: Int!
  product_id: Int
  stock_id: Int
  qty: Float
  is_in_stock: Boolean
  is_qty_decimal: Boolean
  sku: String!
}

# Merged Types with SKU-Based Relationships
type EnrichedProduct {
  # Core Product Data
  sku: String!
  name: String
  price: Float
  status: Int
  type_id: String
  attribute_set_id: Int
  created_at: String
  updated_at: String
  weight: Float
  custom_attributes: [CustomAttribute]
  media_gallery_entries: [MediaGalleryEntry]
  
  # Merged Category Data (resolved via SKU relationship)
  categories: [ProductCategory]
  category_ids: [String]
  
  # Merged Inventory Data (resolved via SKU relationship)
  inventory: ProductInventory
  qty: Float
  is_in_stock: Boolean
  
  # Metadata
  data_sources: [String]
  merge_status: String
}

type ProductCategory {
  id: String!
  name: String!
  parent_id: Int
  is_active: Boolean
  position: Int
}

type ProductInventory {
  item_id: Int
  product_id: Int
  stock_id: Int
  qty: Float
  is_in_stock: Boolean
  is_qty_decimal: Boolean
}

type CustomAttribute {
  attribute_code: String
  value: String
}

type MediaGalleryEntry {
  file: String
  url: String
  position: Int
  types: [String]
}

# Response Types for Merged Data
type EnrichedProductsResponse {
  products: [EnrichedProduct]
  total_count: Int
  merge_statistics: MergeStatistics
  performance: MergePerformance
}

type MergeStatistics {
  products_processed: Int
  categories_merged: Int
  inventory_merged: Int
  successful_merges: Int
  failed_merges: Int
  missing_categories: Int
  missing_inventory: Int
}

type MergePerformance {
  execution_time: Float
  merge_time: Float
  source_queries: Int
  cache_hits: Int
  cache_misses: Int
  total_api_calls: Int
}

# Query Extensions for Merged Data
extend type Query {
  # Main enriched products query with automatic type merging
  products_enriched(
    pageSize: Int = 20
    maxPages: Int = 25
    includeCategories: Boolean = true
    includeInventory: Boolean = true
  ): EnrichedProductsResponse
  
  # Individual product with merged data
  product_enriched(
    sku: String!
    includeCategories: Boolean = true
    includeInventory: Boolean = true
  ): EnrichedProduct
  
  # Debug query for merge testing
  merge_debug(
    sku: String
    showSources: Boolean = false
  ): MergeDebugResponse
}

type MergeDebugResponse {
  sku: String
  sources_available: [String]
  merge_status: String
  category_merge_status: String
  inventory_merge_status: String
  errors: [String]
  warnings: [String]
}
