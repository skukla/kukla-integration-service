[
  {
    "source": "Products",
    "authentication": "OAuth 1.0",
    "pattern": "Paginated API fetching with OAuth authentication",
    "functions": [
      "fetchAllProducts"
    ],
    "keyLogic": [
      "OAuth header generation for each request",
      "Paginated fetching with configurable page size",
      "Field selection via query parameters",
      "Error handling for API failures",
      "Response validation and parsing"
    ],
    "extractionTarget": "src/mesh/json-schema/resolvers/products.js",
    "complexity": "MEDIUM",
    "dependencies": [
      "OAuth utilities",
      "HTTP client"
    ]
  },
  {
    "source": "Categories",
    "authentication": "OAuth 1.0",
    "pattern": "Individual category fetching with caching",
    "functions": [
      "fetchCategoriesData"
    ],
    "keyLogic": [
      "Cache-first lookup with TTL",
      "Batch processing for uncached categories",
      "OAuth authentication for each request",
      "Individual category API calls",
      "Cache population after successful fetch"
    ],
    "extractionTarget": "src/mesh/json-schema/resolvers/categories.js",
    "complexity": "MEDIUM",
    "dependencies": [
      "OAuth utilities",
      "Caching utilities",
      "HTTP client"
    ]
  },
  {
    "source": "Inventory",
    "authentication": "Admin Token",
    "pattern": "Batch inventory fetching with admin token",
    "functions": [
      "getAdminToken",
      "fetchInventoryData"
    ],
    "keyLogic": [
      "Admin token extraction from headers",
      "Batch processing for multiple SKUs",
      "Search criteria with IN filter",
      "Bearer token authentication",
      "Inventory mapping by SKU"
    ],
    "extractionTarget": "src/mesh/json-schema/resolvers/inventory.js",
    "complexity": "LOW",
    "dependencies": [
      "HTTP client",
      "Admin token utilities"
    ]
  }
]