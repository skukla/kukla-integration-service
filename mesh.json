{
  "meshConfig": {
    "sources": [
      {
        "name": "commercerest",
        "handler": {
          "openapi": {
            "source": "https://citisignal-com774.adobedemo.com/rest/all/schema?services=all",
            "operationHeaders": {
              "Content-Type": "application/json"
            }
          }
        }
      }
    ],
    "additionalResolvers": [
      "./mesh-resolvers.js"
    ],
    "additionalTypeDefs": "type CategoriesResponse {\n  categories: JSON\n  total_count: Int\n  message: String\n  status: String\n}\n\ntype EnrichedProduct {\n  sku: String!\n  name: String\n  price: Float\n  qty: Float\n  categories: [ProductCategory]\n  images: [ProductImage]\n  media_gallery_entries: [MediaGalleryEntry]\n  inventory: ProductInventory\n}\n\ntype EnrichedProductsResponse {\n  products: [EnrichedProduct]\n  total_count: Int\n  message: String\n  status: String\n  performance: ProductsPerformance\n}\n\ntype InventoryResponse {\n  inventory: JSON\n  total_count: Int\n  message: String\n  status: String\n}\n\ntype MediaGalleryEntry {\n  file: String\n  url: String\n  position: Int\n  types: [String]\n}\n\ntype ProductCategory {\n  id: String!\n  name: String!\n}\n\ntype ProductImage {\n  filename: String\n  url: String\n  position: Int\n  roles: [String]\n}\n\ntype ProductInventory {\n  qty: Float\n  is_in_stock: Boolean\n}\n\ntype ProductsPerformance {\n  processedProducts: Int\n  apiCalls: Int\n  method: String\n  executionTime: Float\n  totalTime: String\n  productFetch: String\n  dataExtraction: String\n  parallelFetch: String\n  dataEnrichment: String\n  productsApiCalls: Int\n  categoriesApiCalls: Int\n  inventoryApiCalls: Int\n  totalApiCalls: Int\n  uniqueCategories: Int\n  productCount: Int\n  skuCount: Int\n  clientCalls: Int\n  dataSourcesUnified: Int\n  queryConsolidation: String\n  cacheHitRate: Int\n  categoriesCached: Int\n  categoriesFetched: Int\n  operationComplexity: String\n  dataFreshness: String\n  clientComplexity: String\n  apiOrchestration: String\n  parallelization: String\n  meshOptimizations: [String]\n}\n\ntype ProductsResponse {\n  products: [EnrichedProduct]\n  total_count: Int\n  message: String\n  status: String\n  performance: ProductsPerformance\n}\n\nextend type Query {\n  mesh_products_enriched(pageSize: Int, maxPages: Int): ProductsResponse\n}\n\nschema {\n  query: Query\n}"
  }
}