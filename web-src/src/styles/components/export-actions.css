/* Export Actions Component Styles
 * Uses design system tokens and follows established component patterns
 */

.export-actions {
  display: flex;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
  flex-wrap: wrap;
}

@media (max-width: 768px) {
  .export-actions {
    flex-direction: column;
    gap: var(--spacing-sm);
  }
}

/* Export Button Styling - extends .btn base styles */
.export-actions .btn {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: var(--spacing-md) var(--spacing-lg);
  min-width: 200px;
  text-align: left;
  border-radius: var(--radius-md);
  border: var(--border-xs) solid transparent;
  font-family: var(--font-family-primary);
  cursor: pointer;
  transition: background-color var(--transition-hover);
  position: relative;
  will-change: transform, box-shadow;
}

.export-actions .btn:hover {
  /* Subtle hover effect only */
}

.export-actions .btn:active {
  transform: var(--transform-initial);
}

.export-actions .btn:disabled {
  opacity: var(--button-loading-opacity);
  cursor: not-allowed;
  transform: var(--transform-initial);
}

/* Primary Button (REST API) - uses design system primary colors */
.export-actions .btn-primary {
  background: linear-gradient(135deg, var(--color-blue-primary) 0%, var(--color-blue-hover) 100%);
  color: var(--color-white);
  border-color: var(--color-blue-hover);
}

.export-actions .btn-primary:hover {
  background: linear-gradient(135deg, var(--color-blue-hover) 0%, var(--color-blue-active) 100%);
  border-color: var(--color-blue-active);
}

/* Secondary Button (API Mesh) - uses design system success colors */
.export-actions .btn-secondary {
  background: linear-gradient(135deg, var(--color-success) 0%, var(--color-success-hover) 100%);
  color: var(--color-white);
  border-color: var(--color-success-hover);
}

.export-actions .btn-secondary:hover {
  background: linear-gradient(
    135deg,
    var(--color-success-hover) 0%,
    var(--color-success-active) 100%
  );
  border-color: var(--color-success-active);
}

/* Button Text Styling - uses design system typography */
.btn-text {
  font-size: var(--font-size-md);
  font-weight: var(--font-weight-semibold);
  margin-bottom: var(--spacing-xs);
  line-height: 1.2;
}

.btn-subtitle {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-regular);
  opacity: 0.85;
  line-height: 1.3;
}

/* Export Section - Fixed height container to prevent jumping */
.export-section {
  position: relative;
  min-height: 160px; /* Fixed height to accommodate buttons + loader */
}

/* Export loader - overlay positioning to prevent layout jumping */
#export-loader {
  position: absolute;
  top: 120px; /* Position below buttons */
  left: 0;
  right: 0;
  z-index: 2;
  margin: 0; /* Remove margin since we're using absolute positioning */
}

/* Legacy export status styles removed - using toast notifications now */

/* Export Method Indicators - Removed (not helpful) */

/* Button loading now uses the unified loading component system */

/* Performance Comparison Styling - enhanced with design system tokens */
.export-actions .btn-primary .btn-subtitle::after {
  content: ' (Multiple calls)';
  font-weight: var(--font-weight-regular);
  opacity: 0.7;
}

.export-actions .btn-secondary .btn-subtitle::after {
  content: ' (Single query)';
  font-weight: var(--font-weight-regular);
  opacity: 0.7;
}

/* Focus States - uses design system focus handling */
.export-actions .btn:focus-visible {
  outline: var(--border-sm) solid var(--color-focus-ring);
  outline-offset: var(--spacing-xs);
}

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .export-actions .btn {
    transition: none;
  }

  .loader-spinner {
    animation: none;
    border-color: var(--color-blue-primary);
  }
}

/* High Contrast Mode Support */
@media (forced-colors: active) {
  .export-actions .btn {
    border: var(--border-xs) solid ButtonBorder;
  }

  .export-actions .btn:hover {
    border-color: Highlight;
  }

  .loader {
    border: var(--border-xs) solid ButtonBorder;
  }
}

/* Print Styles */
@media print {
  .loader-spinner {
    display: none;
  }

  .export-actions {
    gap: var(--spacing-sm);
  }
}
