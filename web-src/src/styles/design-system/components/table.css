/* Table Components */

/* Table Container */
.table-wrapper {
    position: relative;
    width: 100%;
    overflow: visible;
    background-color: var(--color-white);
    border-radius: var(--radius-md);
    min-height: 160px;
    border: 1px solid var(--color-gray-200);
    box-shadow: var(--shadow-md);
}

/* Base Table */
.table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;
    text-align: left;
    position: relative;
    table-layout: fixed;
    font-size: var(--font-size-sm);
    background-color: var(--color-gray-50);
}

/* Table Header */
.table-head {
    background-color: var(--color-gray-100);
    position: sticky;
    top: 0;
    z-index: 2;
    border-bottom: 2px solid var(--color-gray-200);
}

.table-header {
    padding: var(--spacing-md) var(--spacing-lg);
    font-weight: var(--font-weight-bold);
    color: var(--color-gray-900);
    text-align: left;
    white-space: nowrap;
    border: none;
    text-transform: uppercase;
    letter-spacing: 0.06em;
    font-size: var(--font-size-xs);
    background-color: var(--color-gray-100);
}

/* Add bottom shadow for sticky header */
.table-head::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    bottom: -4px;
    height: 4px;
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.05) 0%, rgba(0, 0, 0, 0) 100%);
    pointer-events: none;
}

.table-header:first-child {
    border-top-left-radius: var(--radius-md);
    padding-left: var(--spacing-xl);
    position: relative;
}

.table-header:last-child {
    border-top-right-radius: var(--radius-md);
    padding-right: var(--spacing-xl);
    position: relative;
}

/* Ensure header maintains distinction when table is empty */
.table-wrapper:empty .table-head {
    border-radius: var(--radius-md);
    border-bottom: none;
}

/* Table Body */
.table-body {
    position: relative;
    background-color: transparent;
}

.table-row {
    transition: all var(--transition-normal);
    background-color: var(--color-white);
    border-bottom: 1px solid var(--color-gray-100);
    margin: var(--spacing-xs) 0;
}

.table-row:last-child {
    border-bottom: none;
    margin-bottom: var(--spacing-xs);
}

.table-row:not(.is-skeleton):hover {
    background-color: var(--color-row-hover-background);
    cursor: pointer;
    transform: translateY(-1px);
    box-shadow: var(--shadow-xs);
}

.table-cell {
    padding: var(--spacing-md) var(--spacing-lg);
    color: var(--color-gray-900);
    line-height: 1.5;
    vertical-align: middle;
}

/* First and last cells get extra padding for better spacing */
.table-cell:first-child {
    padding-left: var(--spacing-xl);
}

.table-cell:last-child {
    padding-right: var(--spacing-xl);
}

/* Column Widths */
.col-file { width: 40%; }
.col-size { width: 15%; }
.col-date { width: 25%; }
.col-actions { 
    width: 20%;
    text-align: center;
}

/* Skeleton Loading */
.is-skeleton {
    background-color: var(--color-white);
}

.skeleton-cell {
    padding: var(--spacing-md) var(--spacing-lg);
    border-bottom: none;
}

.skeleton-cell:first-child {
    padding-left: var(--spacing-xl);
}

.skeleton-cell:last-child {
    padding-right: var(--spacing-xl);
}

.skeleton-block {
    display: block;
    background: var(--color-gray-200);
    border-radius: var(--radius-sm);
    animation: pulse 2s infinite;
    height: var(--spacing-lg);
}

/* Empty State */
.empty-state {
    background-color: var(--color-white);
    border-radius: 0 0 var(--radius-md) var(--radius-md);
}

.empty-state .table-cell {
    padding: var(--spacing-2xl) var(--spacing-xl);
}

/* Loading States */
.is-loading .table {
    opacity: 0.5;
    pointer-events: none;
    user-select: none;
}

/* Cell Alignments */
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }

/* Cell Types */
.cell-numeric {
    font-family: monospace;
    text-align: right;
}

.cell-actions {
    text-align: right;
    white-space: nowrap;
}

/* Actions Column */
.actions-cell {
    text-align: center;
}

.actions-group {
    display: inline-flex;
    justify-content: center;
    gap: var(--spacing-xs);
    flex-wrap: nowrap;
}

/* Skeleton Variants */
.skeleton-file .skeleton-block { width: 85%; }
.skeleton-size .skeleton-block { width: 45%; }
.skeleton-date .skeleton-block { width: 65%; }

.skeleton-actions {
    text-align: center;
}

.skeleton-actions-group {
    display: inline-flex;
    gap: var(--spacing-sm);
    justify-content: center;
}

.skeleton-button {
    height: var(--spacing-lg);
    border-radius: var(--radius-sm);
}

.skeleton-button-primary { width: var(--spacing-3xl); }
.skeleton-button-secondary { width: var(--spacing-2xl); }

/* Responsive */
@media (max-width: 768px) {
    .table-wrapper {
        margin: 0 calc(-1 * var(--spacing-md));
        width: calc(100% + (2 * var(--spacing-md)));
        border-radius: 0;
    }
    
    .table-header:first-child,
    .table-header:last-child {
        border-radius: 0;
    }
}

/* Table Loading State */
.table-container.htmx-request {
    /* height declaration removed since it's handled by min/max-height on container */
}

.table-container .loading-overlay {
    min-height: calc(
        (var(--spectrum-global-dimension-size-500) + var(--spectrum-global-dimension-size-200)) + 
        (var(--spectrum-global-dimension-size-500) + var(--spectrum-global-dimension-size-200))
    );
    max-height: calc(
        (var(--spectrum-global-dimension-size-500) + var(--spectrum-global-dimension-size-200)) + 
        (var(--spectrum-global-dimension-size-500) + var(--spectrum-global-dimension-size-200))
    );
}

.table-container .loading-indicator {
    border-radius: var(--spectrum-global-dimension-size-50);
    transition: opacity 0.3s ease-in-out;
}

.loading-spinner {
    width: var(--spectrum-global-dimension-size-600);
    height: var(--spectrum-global-dimension-size-600);
    border: var(--spectrum-global-dimension-size-50) solid var(--spectrum-global-color-gray-200);
    border-radius: 50%;
    border-top-color: var(--spectrum-global-color-blue-500);
    border-left-color: var(--spectrum-global-color-blue-500);
    animation: spectrum-spin 1s cubic-bezier(0.4, 0, 0.2, 1) infinite;
}

@keyframes spectrum-spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}

/* Loading State */
.loading-indicator {
    transition: opacity 0.3s ease-in-out;
}

.loading-indicator.htmx-request {
    opacity: 1;
}

.loading-indicator:not(.htmx-request) {
    opacity: 0;
} 