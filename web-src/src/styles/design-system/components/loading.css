/* Loading Design System - Foundation tokens and generic components
 * Provides reusable loading primitives and baseline functionality
 */

/* ============================================================================
 * DESIGN SYSTEM TOKENS - Foundation values
 * ============================================================================ */

:root {
  /* Spinner Dimensions */
  --loading-spinner-size-sm: var(--spacing-lg); /* 24px */
  --loading-spinner-size-md: var(--spacing-2xl); /* 40px */
  --loading-spinner-size-lg: var(--spacing-3xl); /* 48px */
  --loading-spinner-border-width-sm: var(--border-sm);
  --loading-spinner-border-width-lg: var(--spacing-xs);

  /* Spinner Colors */
  --loading-spinner-color-primary: var(--color-blue-primary);
  --loading-spinner-color-secondary: var(--color-gray-200);

  /* Loading States */
  --loading-background: var(--color-overlay-light);
  --loading-opacity: var(--opacity-50);
  --loading-min-block-size: calc(var(--spacing-3xl) * 2);
  --loading-z-index: var(--z-index-dropdown);
  --loading-transition: opacity var(--transition-fade);

  /* Loading Text */
  --loading-text-color: var(--color-gray-800);
  --loading-text-margin-block: var(--spacing-md);

  /* Skeleton Loading */
  --skeleton-background: var(--color-gray-100);
  --skeleton-shine: var(--color-gray-50);
  --skeleton-row-background: var(--color-gray-50);
  --skeleton-animation-duration: 2.5s;
  --skeleton-animation-timing: var(--ease-in-out);
  --skeleton-animation: shine var(--skeleton-animation-duration) var(--skeleton-animation-timing)
    infinite;
  --skeleton-block-size: var(--spacing-lg);
  --skeleton-border-radius: var(--radius-sm);
  --skeleton-cell-padding-block: var(--spacing-md);
  --skeleton-cell-padding-inline: var(--spacing-lg);

  /* Animation Timing */
  --loading-animation-duration: 1.5s;
  --loading-animation-timing: ease-in-out;
}

/* ============================================================================
 * GENERIC LOADING PRIMITIVES - Reusable foundation components
 * ============================================================================ */

/* Loading Indicator - Generic overlay loading */
.loading-indicator {
  display: none;
  position: absolute;
  inset: 0;
  background-color: var(--loading-background);
  z-index: var(--loading-z-index);
  transition: var(--loading-transition);

  /* Performance optimizations */
  contain: strict;
  will-change: opacity, transform;
  transform: translateZ(0);
  backface-visibility: hidden;
  pointer-events: none;
}

.loading-indicator.is-loading {
  display: grid;
  place-items: center;
  opacity: 1;
  pointer-events: auto;
}

.loading-indicator:not(.is-loading) {
  opacity: 0;
}

/* Loading Overlay - Positioned loading layer */
.loading-overlay {
  visibility: hidden;
  position: absolute;
  inset: 0;
  background-color: var(--loading-background);
  z-index: var(--loading-z-index);
  display: grid;
  place-items: center;
  border-radius: inherit;
  opacity: 0;
  transition: var(--loading-transition);
  min-block-size: var(--loading-min-block-size);

  /* Performance optimizations */
  contain: strict;
  will-change: opacity, visibility;
}

.loading-overlay.is-loading {
  visibility: visible;
  opacity: 1;
}

/* Loading Container - Wrapper for relative loading states */
.loading-container {
  position: relative;
  min-block-size: var(--loading-min-block-size);

  /* Performance optimizations */
  contain: content;
}

/* Loading Spinner - Base spinner component */
.loading-spinner {
  inline-size: var(--loading-spinner-size-lg);
  block-size: var(--loading-spinner-size-lg);
  border: var(--loading-spinner-border-width-lg) solid var(--loading-spinner-color-secondary);
  border-radius: 50%;
  border-block-start-color: var(--loading-spinner-color-primary);
  border-inline-start-color: var(--loading-spinner-color-primary);
  animation: var(--animation-spin);
  animation-duration: var(--loading-animation-duration);
  animation-timing-function: var(--loading-animation-timing);

  /* Performance optimizations */
  contain: strict;
  will-change: transform;

  @media (prefers-reduced-motion: reduce) {
    animation: none;
    border-color: var(--loading-spinner-color-primary);
  }
}

/* Loading Spinner Size Variants */
.loading-spinner-sm {
  inline-size: var(--loading-spinner-size-sm);
  block-size: var(--loading-spinner-size-sm);
  border-width: var(--loading-spinner-border-width-sm);
}

.loading-spinner-lg {
  inline-size: var(--loading-spinner-size-lg);
  block-size: var(--loading-spinner-size-lg);
  border-width: var(--loading-spinner-border-width-lg);
}

/* Loading Text - Descriptive loading text */
.loading-text {
  color: var(--loading-text-color);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  letter-spacing: var(--letter-spacing-wide);
  text-transform: uppercase;
  margin-block-start: var(--loading-text-margin-block);
}

/* ============================================================================
 * SKELETON LOADING - Content placeholders
 * ============================================================================ */

/* Skeleton Row - Table row placeholder */
.skeleton-row {
  display: table-row;
  background-color: var(--skeleton-row-background);

  /* Performance optimizations */
  contain: content;
}

.skeleton-row td {
  padding-block: var(--skeleton-cell-padding-block);
  padding-inline: var(--skeleton-cell-padding-inline);
  vertical-align: middle;
}

/* Skeleton Block - Content placeholder */
.skeleton-block {
  display: block;
  background-color: var(--skeleton-background);
  border-radius: var(--skeleton-border-radius);
  block-size: var(--skeleton-block-size);
  position: relative;
  overflow: hidden;

  /* Performance optimizations */
  contain: strict;
  transform: translateZ(0);
  backface-visibility: hidden;

  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

.skeleton-block::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    90deg,
    var(--skeleton-background) 0%,
    var(--skeleton-shine) 50%,
    var(--skeleton-background) 100%
  );
  background-size: 200% 100%;
  background-position: 200% 0;
  animation: var(--skeleton-animation);

  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

/* Skeleton Content Type Widths */
.skeleton-file .skeleton-block {
  inline-size: var(--skeleton-width-lg);
}
.skeleton-size .skeleton-block {
  inline-size: var(--skeleton-width-sm);
}
.skeleton-date .skeleton-block {
  inline-size: var(--skeleton-width-md);
}

/* Skeleton Cell Spacing */
.skeleton-cell {
  padding-block: var(--skeleton-cell-padding-block);
  padding-inline: var(--skeleton-cell-padding-inline);
  text-align: left;
}

.skeleton-cell:first-child {
  padding-inline-start: var(--spacing-lg);
}

.skeleton-cell:last-child {
  padding-inline-end: var(--spacing-lg);
  text-align: center; /* Center the last cell (actions) */
}

/* Skeleton Actions - Button placeholders */
.skeleton-actions {
  display: flex;
  gap: var(--spacing-sm);
  justify-content: center; /* Center the buttons */
  width: 100%; /* Ensure full width for centering */
}

.skeleton-button {
  inline-size: calc(var(--spacing-3xl) + var(--spacing-2xl)); /* Match table button width */
  block-size: var(--spacing-lg);
  background-color: var(--skeleton-background);
  border-radius: var(--radius-sm);
  position: relative;
  overflow: hidden;

  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

.skeleton-button::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(
    90deg,
    var(--skeleton-background) 0%,
    var(--skeleton-shine) 50%,
    var(--skeleton-background) 100%
  );
  background-size: 200% 100%;
  background-position: 200% 0;
  animation: var(--skeleton-animation);

  @media (prefers-reduced-motion: reduce) {
    animation: none;
  }
}

.skeleton-button-primary {
  background-color: var(--color-blue-100);
}

.skeleton-button-secondary {
  background-color: var(--color-gray-100);
}

/* ============================================================================
 * ACCESSIBILITY & PERFORMANCE - Universal loading considerations
 * ============================================================================ */

/* Reduced Motion Support */
@media (prefers-reduced-motion: reduce) {
  .loading-spinner {
    animation: none;
    border-color: var(--loading-spinner-color-primary);
  }
}

/* High Contrast Mode Support */
@media (forced-colors: active) {
  .loading-indicator,
  .loading-overlay {
    border-color: ButtonText;
    background-color: ButtonFace;
    color: ButtonText;
  }

  .loading-spinner {
    border-color: ButtonText;
  }

  .skeleton-block,
  .skeleton-button {
    background-color: ButtonFace;
    border: 1px solid ButtonText;
  }
}

/* Print Styles - Hide loading elements */
@media print {
  .loading-indicator,
  .loading-overlay,
  .loading-spinner,
  .skeleton-row,
  .skeleton-block,
  .skeleton-button {
    display: none !important;
  }

  .loading-text {
    color: black;
  }
}

/* ============================================================================
 * BASE ANIMATIONS - Foundation keyframes
 * ============================================================================ */

@keyframes shine {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}
